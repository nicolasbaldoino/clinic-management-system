generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  role     UserRole @default(ADMIN)

  clinicId String? @map("clinic_id")
  clinic   Clinic? @relation(fields: [clinicId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Clinic {
  id   String @id @default(uuid())
  name String

  users         User[]
  professionals Professional[]
  appointments  Appointment[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("clinics")
}

model Professional {
  id         String @id @default(uuid())
  name       String
  speciality String
  email      String

  clinicId String @map("clinic_id")
  clinic   Clinic @relation(fields: [clinicId], references: [id])

  schedules    Schedule[]
  appointments Appointment[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("professionals")
}

model Schedule {
  id        String         @id @default(uuid())
  date      DateTime
  startTime String         @map("start_time") // Format: "HH:mm" 
  endTime   String         @map("end_time") // Format: "HH:mm"
  status    ScheduleStatus @default(AVAILABLE)

  professionalId String       @map("professional_id")
  professional   Professional @relation(fields: [professionalId], references: [id])

  appointment Appointment?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("schedules")
}

model Patient {
  id    String @id @default(uuid())
  name  String
  cpf   String @unique
  email String @unique
  phone String

  appointments Appointment[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("patients")
}

model Appointment {
  id     String            @id @default(uuid())
  status AppointmentStatus @default(SCHEDULED)

  clinicId String @map("clinic_id")
  clinic   Clinic @relation(fields: [clinicId], references: [id])

  professionalId String       @map("professional_id")
  professional   Professional @relation(fields: [professionalId], references: [id])

  patientId String  @map("patient_id")
  patient   Patient @relation(fields: [patientId], references: [id])

  scheduleId String   @unique @map("schedule_id")
  schedule   Schedule @relation(fields: [scheduleId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("appointments")
}

enum UserRole {
  ADMIN
  PROFESSIONAL
}

enum ScheduleStatus {
  AVAILABLE
  BOOKED
}

enum AppointmentStatus {
  SCHEDULED
  CONFIRMED
  CANCELLED
  COMPLETED
}
