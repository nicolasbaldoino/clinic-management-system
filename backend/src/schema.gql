# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Appointment {
  clinic: Clinic!
  clinicId: String!
  createdAt: DateTime!
  date: DateTime!
  endTime: String!
  id: ID!
  patient: Patient!
  patientId: String!
  professional: Professional!
  professionalId: String!
  startTime: String!
  status: AppointmentStatus!
  updatedAt: DateTime!
}

"""Status da consulta"""
enum AppointmentStatus {
  CANCELLED
  COMPLETED
  CONFIRMED
  SCHEDULED
}

type Clinic {
  appointments: [Appointment!]!
  createdAt: DateTime!
  id: ID!
  name: String!
  professionals: [Professional!]!
  updatedAt: DateTime!
  users: [User!]!
}

input CreateAppointmentInput {
  cpf: String!
  date: DateTime!
  scheduleId: String!
}

input CreateClinicInput {
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  cancelAppointment(appointmentId: ID!, cpf: String!): Appointment!
  createAppointment(input: CreateAppointmentInput!): Appointment!
  createClinic(createClinicInput: CreateClinicInput!): Clinic!
  removeClinic(id: ID!): Clinic!
  updateClinic(id: ID!, updateClinicInput: UpdateClinicInput!): Clinic!
}

type Patient {
  cpf: String!
  createdAt: DateTime!
  email: String!
  id: ID!
  name: String!
  phone: String!
  updatedAt: DateTime!
}

type Professional {
  clinic: Clinic!
  clinicId: String!
  createdAt: DateTime!
  email: String!
  id: ID!
  name: String!
  schedules: [Schedule!]!
  speciality: String!
  updatedAt: DateTime!
}

type Query {
  appointment(id: ID!): Appointment!
  appointments: [Appointment!]!
  appointmentsByClinic(clinicId: ID!): [Appointment!]!
  appointmentsByPatient(patientId: ID!): [Appointment!]!
  appointmentsByProfessional(clinicId: ID!, professionalId: ID!): [Appointment!]!
  appointmentsByStatus(clinicId: ID!, status: AppointmentStatus!): [Appointment!]!
  availableSchedules(clinicId: ID!, date: DateTime!, professionalId: ID!): [Schedule!]!
  clinic(id: ID!): Clinic!
  clinics: [Clinic!]!
  patient(id: ID!): Patient!
  patientAppointments(cpf: String!): [Appointment!]!
  patientByCpf(cpf: String!): Patient!
  patients: [Patient!]!
  professional(id: ID!): Professional!
  professionals: [Professional!]!
  professionalsByClinic(clinicId: ID!): [Professional!]!
  professionalsBySpeciality(clinicId: ID!, speciality: String!): [Professional!]!
  schedule(id: ID!): Schedule!
  schedules: [Schedule!]!
  schedulesByClinic(clinicId: ID!): [Schedule!]!
  schedulesByProfessional(clinicId: ID!, professionalId: ID!): [Schedule!]!
  schedulesByStatus(clinicId: ID!, status: ScheduleStatus!): [Schedule!]!
  user(id: ID!): User!
  users: [User!]!
  usersByClinic(clinicId: ID!): [User!]!
}

type Schedule {
  clinic: Clinic!
  clinicId: String!
  createdAt: DateTime!
  date: DateTime!
  endTime: String!
  id: ID!
  professional: Professional!
  professionalId: String!
  startTime: String!
  status: ScheduleStatus!
  updatedAt: DateTime!
}

"""Status do horário"""
enum ScheduleStatus {
  AVAILABLE
  BOOKED
}

input UpdateClinicInput {
  name: String
}

type User {
  clinic: Clinic
  clinicId: String
  createdAt: DateTime!
  email: String!
  id: ID!
  name: String!
  role: UserRole!
  updatedAt: DateTime!
}

"""Papel do usuário no sistema"""
enum UserRole {
  ADMIN
  PROFESSIONAL
}